# Generated by Django 5.1.3 on 2025-05-25 14:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название офиса')),
                ('location', models.CharField(max_length=255, verbose_name='Местоположение')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='телефон')),
                ('quota', models.PositiveIntegerField(verbose_name='Базовая квота')),
                ('used_quota', models.PositiveIntegerField(default=0, verbose_name='Использованная квота')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Офис',
                'verbose_name_plural': 'Офисы',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(blank=True, max_length=32, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Номер телефона')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatars/users/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChatLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('telegram', 'Telegram'), ('whatsapp', 'Whatsapp')], max_length=16, verbose_name='Платформа')),
                ('is_active', models.BooleanField(default=True, verbose_name='активна')),
                ('link', models.CharField(max_length=512, verbose_name='Ссылка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='добавлена')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Стала неактивной')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Активная ссылка',
                'verbose_name_plural': 'Ссылки',
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_archive', models.BooleanField(default=False, verbose_name='в архиве')),
                ('name', models.CharField(max_length=16, verbose_name='имя')),
                ('surname', models.CharField(max_length=64, verbose_name='фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=32, null=True, verbose_name='отчество')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='дата рождения')),
                ('education', models.CharField(blank=True, max_length=128, null=True, verbose_name='образование')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='avatars/candidates/', verbose_name='фото')),
                ('country', models.CharField(default='Россия', max_length=32, verbose_name='страна')),
                ('city', models.CharField(blank=True, max_length=32, null=True, verbose_name='город')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='почта')),
                ('phone', models.CharField(blank=True, max_length=16, verbose_name='телефон')),
                ('resume', models.CharField(blank=True, max_length=128, null=True, verbose_name='резюме')),
                ('agreement', models.FileField(blank=True, null=True, upload_to='', verbose_name='Согласие на ОПД')),
                ('is_free', models.BooleanField(default=True, verbose_name='свободен')),
                ('achivment_objects', models.PositiveIntegerField(default=0, verbose_name='Объекты')),
                ('achivment_clients', models.PositiveIntegerField(default=0, verbose_name='Клиенты')),
                ('achivment_leads', models.PositiveIntegerField(default=0, verbose_name='Лиды')),
                ('achivment_exclusives', models.PositiveIntegerField(default=0, verbose_name='Эксклюзивы')),
                ('achivment_deals', models.PositiveIntegerField(default=0, verbose_name='Cделки')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлён')),
                ('courses', models.ManyToManyField(blank=True, null=True, related_name='candidates', to='hr.course')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hr.office')),
            ],
            options={
                'verbose_name': 'Кандидат',
                'verbose_name_plural': 'Кандидаты',
                'unique_together': {('email', 'phone')},
            },
        ),
        migrations.CreateModel(
            name='QuotaRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('waited', 'ожидание'), ('accepted', 'Принято'), ('rejected', 'Отклонено')], default='waited', max_length=16, verbose_name='статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.office', verbose_name='оффис')),
            ],
            options={
                'verbose_name': 'Запрос',
                'verbose_name_plural': 'Запросы',
            },
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.TextField(verbose_name='Задача')),
                ('due_date', models.DateTimeField(verbose_name='Дата выполнения')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Выполнено')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Видимость')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалена')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('complete_at', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation', models.CharField(choices=[('add', 'Добавление квот'), ('subtract', 'Снятие квот')], max_length=8, verbose_name='Операция')),
                ('cause', models.CharField(max_length=128, verbose_name='причина')),
                ('amount', models.PositiveIntegerField(verbose_name='Количество')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.office', verbose_name='Офис')),
            ],
            options={
                'verbose_name': 'Транзакция',
                'verbose_name_plural': 'Транзакции',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Администратор',
                'verbose_name_plural': 'Администраторы',
                'unique_together': {('user',)},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено в избранное')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.candidate', verbose_name='Кандидат')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранный кандидат',
                'verbose_name_plural': 'Избранные кандидаты',
                'unique_together': {('user', 'candidate')},
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('invited', 'Приглашён'), ('accepted', 'Принят'), ('rejected', 'Отклонён'), ('self_rejected', 'Отказ Кандидата')], default='invited', max_length=50, verbose_name='статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='отправлено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='обновлено')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.candidate', verbose_name='Кандидат')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.office', verbose_name='Офис')),
            ],
            options={
                'verbose_name': 'Приглашение',
                'verbose_name_plural': 'Приглашения',
                'unique_together': {('office', 'candidate', 'status')},
            },
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=128, null=True, verbose_name='Подразделение')),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hr.office', verbose_name='Офис')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Руководитель',
                'verbose_name_plural': 'Руководители',
                'unique_together': {('user', 'office', 'department')},
            },
        ),
    ]
